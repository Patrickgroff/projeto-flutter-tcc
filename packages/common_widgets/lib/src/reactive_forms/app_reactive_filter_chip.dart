part of common_widgets.reactive_forms;

class AppReactiveFilterChip<T> extends ReactiveFormField<T, bool> {
  AppReactiveFilterChip({
    super.key,
    String? formControlName,
    FormControl<T>? formControl,
    ControlValueAccessor<T, bool>? valueAccessor,
    Widget? avatar,
    required Widget label,
    TextStyle? labelStyle,
    EdgeInsetsGeometry? labelPadding,
    double? pressElevation,
    Color? disabledColor,
    Color? selectedColor,
    String? tooltip,
    BorderSide? side,
    OutlinedBorder? shape,
    Clip clipBehavior = Clip.none,
    FocusNode? focusNode,
    bool autofocus = false,
    Color? backgroundColor,
    EdgeInsetsGeometry? padding,
    VisualDensity? visualDensity,
    MaterialTapTargetSize? materialTapTargetSize,
    double? elevation,
    Color? shadowColor,
    Color? selectedShadowColor,
    bool? showCheckmark,
    Color? checkmarkColor,
    final MaterialStateProperty<Color?>? color,
    final IconThemeData? iconTheme,
    final Color? surfaceTintColor,
    ShapeBorder avatarBorder = const CircleBorder(),
  }) : super(
            formControlName: formControlName,
            formControl: formControl,
            valueAccessor: valueAccessor,
            builder: (ReactiveFormFieldState<T, bool> field) {
              return FilterChip(
                avatar: avatar,
                label: label,
                key: key,
                labelStyle: labelStyle,
                labelPadding: labelPadding,
                selected: field.value ?? false,
                onSelected: (isSelected) => field.didChange(isSelected),
                pressElevation: pressElevation,
                disabledColor: disabledColor,
                selectedColor: selectedColor,
                tooltip: tooltip,
                side: side,
                shape: shape,
                clipBehavior: clipBehavior,
                focusNode: focusNode,
                autofocus: autofocus,
                backgroundColor: backgroundColor,
                padding: padding,
                visualDensity: visualDensity,
                materialTapTargetSize: materialTapTargetSize,
                elevation: elevation,
                shadowColor: shadowColor,
                selectedShadowColor: selectedShadowColor,
                showCheckmark: showCheckmark,
                checkmarkColor: checkmarkColor,
                avatarBorder: avatarBorder,
                color: color,
                iconTheme: iconTheme,
                surfaceTintColor: surfaceTintColor,
              );
            });

  @override
  ReactiveFormFieldState<T, bool> createState() => ReactiveFormFieldState<T, bool>();
}
